syntax = "proto3";

package admin_api;

service Admin {
  // Trivial call to test connectivity
  rpc Ping(PingRequest)
      returns (PingReply);
  rpc NodeInfo(Void)
      returns(NodeInfoReply);
  rpc ChannelList(Void)
      returns (ChannelListReply);
  rpc ChannelNew(ChannelNewRequest)
      returns (ChannelNewReply);
  rpc PeerConnect(PeerConnectRequest)
      returns (PeerConnectReply);
  rpc PeerList(PeerListRequest)
      returns (PeerListReply);
  rpc InvoiceNew(InvoiceNewRequest)
      returns (InvoiceNewReply);
  rpc PaymentSend(PaymentSendRequest)
      returns (PaymentSendReply);
}

message PingRequest {
  string message = 1;
}

message PingReply {
  string message = 1;
}

message Void {
}

message NodeInfoReply {
  bytes node_id = 1;
}

message Channel {
  bytes peer_node_id = 1;
  bytes channel_id = 2;
  bool is_pending = 3;
  uint64 value_sat = 4;
  bool is_active = 5;
  uint64 outbound_msat = 6;

}

message ChannelListReply {
  repeated Channel channels = 1;
}

message ChannelNewRequest {
  bytes node_id = 1;
  string address = 2;
  uint64 value_sat = 3;
  bool is_public = 4;
}

message ChannelNewReply {
}

message PeerConnectRequest {
  bytes node_id = 1;
  string address = 2;
}

message PeerConnectReply {
}

message PeerListRequest {
}

message Peer {
  bytes node_id = 1;
}

message PeerListReply {
  repeated Peer peers = 1;
}

message InvoiceNewRequest {
  uint64 value_msat = 1;
}

message InvoiceNewReply {
  string invoice = 1;
}

message PaymentSendRequest {
  string invoice = 1;
}

message PaymentSendReply {
}